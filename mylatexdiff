#!/bin/sh

# mylatexdiff
# -----------
#
# A shell script wrapper around `latexdiff` for use with `git difftool`.
#
# `latexdiff` will determine and markup differences between two latex files.
# When run, `mylatexdiff` will internally run `latexdiff`, compile the output with
# `pdflatex` and then display the resulting file with `xpdf`.
#
# Author:  valentin.haenel@gmx.de (2011)
# Licence: wtfpl (Do what the fuck you want to public Licence)
#          http://sam.zoy.org/wtfpl/
#
# Configuring for use with git difftool
# -------------------------------------

# Simply put in your $PATH, and then do:
#
#     git difftool --extcmd=mylatexdiff <arguments>
#
# Or alternatively specify the complete path:
#
#     git difftool --extcmd=</path/to/mylatexdiff> <arguments>
#
# You may want to configure the following option to stop the prompt:
#
#     git config --global difftool.prompt false
#
# And perhaps also the following alias to spare you some typing and typos:
#
#     git config --global alias.tdiff 'difftool --extcmd=mylatexdiff'
#
# Examples:
#
#     git tdiff -- report.tex
#     git tdiff HEAD~5.. -- report.tex

default_compiler="pdflatex"
default_extension=".pdf"
default_viewer="xpdf"

function barf () {
    echo "fatal: "$1
    exit 1
}

function git_conf () {
    echo $( git config $1)
    # TODO this does not cause git difftool to exit with non-zero status.
}

tmp=$( git_conf "mylatexdiff.compiler")
[[ -n $tmp ]] && compiler=$tmp || compiler=$default_compiler

tmp=$( git_conf "mylatexdiff.extension")
[[ -n $tmp ]] && extension=$tmp || extension=$default_extension

tmp=$( git_conf "mylatexdiff.viewer")
[[ -n $tmp ]] && viewer=$tmp || viewer=$default_viewer

if ! which latexdiff &> /dev/null ; then
    barf "'latexdiff' not found in \$PATH"
fi

if ! which $compiler &> /dev/null ; then
    barf "$compiler not found in \$PATH"
fi

if ! which $viewer &> /dev/null ; then
    barf "$viewer not found in \$PATH"
fi

echo "using compiler: "$compiler
echo "using extension: "$extension
echo "using viewer: "$viewer

OLD="$1"
NEW="$2"

# TODO perhaps move to the directory that the file is in
# to make sure relative imports are handled correctly
# Probably best to generate a random filename, and then check that it doesn't
# exist
latexdiff --ignore-warnings $OLD $NEW >> diff.tex
# TODO make compiler configurable via a git-option
$compiler diff.tex
# TODO make viewer configurable via a git-option
$viewer "diff"$extension
# TODO clean up the mess we made we could just delete all files
# called diff.* but maybe, just maybe that file exist already in the git-repo
